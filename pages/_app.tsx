import type { AppProps } from 'next/app';
import { ReactElement, ReactNode, Suspense, useState } from 'react';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import { Provider } from 'react-redux';
import store from '../store/index';
import Head from 'next/head';
import NextNProgress from 'nextjs-progressbar';

import { appWithI18Next } from 'ni18n';
import { ni18nConfig } from 'ni18n.config.ts';

// Perfect Scrollbar
import 'react-perfect-scrollbar/dist/css/styles.css';

import '../styles/tailwind.css';
import { NextPage } from 'next';

import React, { useEffect } from 'react';
import { getMessaging, onMessage } from 'firebase/messaging';
import firebaseApp from '@/utils/firebase/firebase';
import useFcmToken from '@/utils/hooks/useFcmToken';
import Swal from 'sweetalert2';
import { BaseUri } from '@/apis/serverConfig';

const showAlert = async (icon: any, text: any) => {
    const toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        showCloseButton: true,
        timer: 3000,
    });
    toast.fire({
        icon: icon,
        title: text,
        padding: '10px 20px',
    });
}

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout;
};

const App = ({ Component, pageProps }: AppPropsWithLayout) => {
    const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);
    const { fcmToken, notificationPermissionStatus } = useFcmToken();

    const baseUri = BaseUri();

    useEffect(() => {
        if (window && fcmToken) {
            const currentUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user') ?? '{[]}') : [];
            const currentToken = localStorage.getItem('token') ?? null;
            if (currentUser && currentToken) {
                fetch(baseUri + '/users/' + currentUser?.id + '/fcm', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        Authorization: `Bearer ${currentToken}`,
                    },
                    body: JSON.stringify({
                        fcmToken: fcmToken,
                    }),
                })
                    .then((response) => {
                        // response.json();
                        // console.log(response.json());
                        console.log('FCM token saved');
                    })
                    .then((data) => {
                        console.log('FCM token saved');
                    })
                    .catch((error) => {
                    });
            }
            if (notificationPermissionStatus === 'denied') {
                showAlert('warning', 'Aktifkan notifikasi untuk mendapatkan informasi terbaru');
            }
        }
    }, []);

    // eslint-disable-next-line react-hooks/rules-of-hooks
    useEffect(() => {
        if (typeof window !== 'undefined' && 'serviceWorker' in navigator) {
            const messaging = getMessaging(firebaseApp);
            const unsubscribe = onMessage(messaging, (payload) => {
                showAlert('info', payload?.notification?.body);
            });
            return () => {
                unsubscribe(); // Unsubscribe from the onMessage event
            };
        }
    }, []);

    return (
        <Provider store={store}>
            <Head>
                <title>SICARAM KABUPATEN OGAN ILIR</title>
                <meta charSet="UTF-8" />
                <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.png" />

                <style>
                    {`
                       .grecaptcha-badge {
                        position: relative !important;
                        left: 0px !important;
                        top: 0px !important;

                            // visibility: hidden;
                    }
                    `}
                </style>
            </Head>

            <NextNProgress color="#29D" startPosition={0.3} stopDelayMs={200} height={3} showOnShallow={true} />
            {getLayout(<Component {...pageProps} />)}
        </Provider>
    );
};
export default appWithI18Next(App, ni18nConfig);
